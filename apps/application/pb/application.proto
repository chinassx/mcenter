syntax = "proto3";

package infraboard.mcenter.application;
option go_package = "github.com/infraboard/mcenter/apps/application";

import "github.com/infraboard/mcube/pb/page/page.proto";

// Service 服务
service Service {
	rpc ValidateClientCredential(ValidateClientCredentialRequest) returns(Application);
	rpc CreateService(CreateMicroRequest) returns(Application);
	rpc QueryService(QueryMicroRequest) returns(Set);
	rpc DescribeService(DescribeMicroRequest) returns(Application);
	rpc DeleteService(DeleteMicroRequest) returns(Application);
	rpc RefreshServiceClientSecret(DescribeMicroRequest) returns(Application);
}

enum Type {
	// SYSTEM  系统应用
	SYSTEM = 0;
    // USER 用户应用, 为用户提供业务功能的服务
    USER = 1;
	// THIRD  第三方应用
	THIRD = 9;
}

// Application is service provider
message Application {
    // 微服务ID
    // @gotags: bson:"_id" json:"id"
    string id = 1;
    // 服务所属域
    // @gotags: bson:"domain" json:"domain"
    string domain = 2;
    // 创建人
    // @gotags: bson:"creater" json:"creater"
    string creater = 3;
    // 创建的时间
    // @gotags: bson:"create_at" json:"create_at,omitempty"
    int64 create_at = 4;
    // 更新时间
    // @gotags: bson:"update_at" json:"update_at,omitempty"
    int64 update_at = 5;
    // 服务账号
    // @gotags: bson:"account" json:"account"
    string account = 6;
    // 服务客户端ID
    // @gotags: bson:"client_id" json:"client_id"
    string client_id = 7;
    // 服务客户端凭证
    // @gotags: bson:"client_secret" json:"client_secret"
    string client_secret = 8;
    // 是否启动客户端
    // @gotags: bson:"client_enabled" json:"client_enabled"
    bool client_enabled = 9;
    // 客户端刷新时间
    // @gotags: bson:"client_refresh_at" json:"client_refresh_at"
    int64 client_refresh_at = 10;
    // 是否启用该服务
    // @gotags: bson:"enabled" json:"enabled"
    bool enabled = 11;
    // 服务类型
    // @gotags: bson:"type" json:"type"
    Type type = 12;
    // 名称
    // @gotags: bson:"name" json:"name"
    string name = 13;
    // 服务标签
    // @gotags: bson:"label" json:"label"
    map<string, string> label = 14;
    // 描述信息
    // @gotags: bson:"description" json:"description,omitempty"
    string description = 15;
}

message Set {
    // @gotags: bson:"total" json:"total"
    int64 total = 1;
    // @gotags: bson:"items" json:"items"
    repeated Application items = 2;
}

// ValidateClientCredentialRequest 校验服务凭证
message ValidateClientCredentialRequest {
    // 服务客户端ID
    // @gotags: json:"client_id" validate:"required,lte=100"
    string client_id = 1;
    // 服务客户端凭证
    // @gotags: json:"client_secret" validate:"required,lte=100"
    string client_secret = 2;                  
}

// CreateMicroRequest 服务创建请求
message CreateMicroRequest {
    // 服务类型
    // @gotags: bson:"type" json:"type"
    Type type = 1;
    // 名称
    // @gotags: bson:"name" json:"name" validate:"required,lte=200"
    string name = 2;
    // 服务标签
    // @gotags: bson:"label" json:"label" validate:"lte=80"
    map<string, string> label = 3;
    // 描述信息
    // @gotags: bson:"description" json:"description,omitempty"
    string description = 4;
    // 服务所属域
    // @gotags: bson:"domain" json:"domain"
    string domain = 5;
    // 创建者ID
    // @gotags: bson:"creater" json:"creater"
    string creater = 6;                 
}

// QueryMicroRequest 查询应用列表
message QueryMicroRequest {
    // @gotags: json:"page"
   infraboard.mcube.page.PageRequest page = 1;
    // 服务类型
    // @gotags: json:"type"
    Type type = 2;
}

// DescribeMicroRequest 查询应用详情
message DescribeMicroRequest {
    // @gotags: json:"client_id"
    string client_id = 1;
    // @gotags: json:"name"
    string name = 2;
    // @gotags: json:"id"
    string id = 3;
}

// DeleteMicroRequest todo
message DeleteMicroRequest {
    // @gotags: json:"id"
    string id = 1;
}