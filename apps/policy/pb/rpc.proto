syntax = "proto3";

package infraboard.mcenter.policy;
option go_package = "github.com/infraboard/mcenter/apps/policy";

import "github.com/infraboard/mcube/pb/page/page.proto";
import "apps/policy/pb/permission.proto";
import "apps/policy/pb/policy.proto";
import "apps/role/pb/permission.proto";



// RPC 策略服务
service RPC {
    // 创建策略
	rpc CreatePolicy(CreatePolicyRequest) returns(Policy);
    // 查询策略列表
	rpc QueryPolicy(QueryPolicyRequest) returns(PolicySet);
    // 查询策略详情
	rpc DescribePolicy(DescribePolicyRequest) returns(Policy);
    // 删除策略
	rpc DeletePolicy(DeletePolicyRequest) returns(Policy);

    // 策略鉴权
    rpc CheckPermission(CheckPermissionRequest) returns(role.Permission);
}

// QueryPolicyRequest 获取子账号列表
message QueryPolicyRequest {
    // 分页参数
    // @gotags: bson:"page" json:"page"
    infraboard.mcube.page.PageRequest page = 1;
    // 策略所属域
    // @gotags: json:"domain"
    string domain = 8;
    // 用户名称
    // @gotags: json:"username"
    string username = 2;
    // 用户角色
    // @gotags: json:"role_id"
    string role_id = 3;
    // 用户空间
    // @gotags: json:"namespace"
    string namespace = 4;
    // 组相关策略
    // @gotags: json:"group"
    string group = 9;  
    // 是否查询角色相关信息
    // @gotags: json:"with_role"
    bool with_role = 6;
    // 是否查询空间相关信息
    // @gotags: json:"with_namespace"
    bool with_namespace = 7;   
}

// DescribePolicyRequest todo
message DescribePolicyRequest {
    // @gotags: json:"id"
	string id = 1;
}

// DeletePolicyRequest todo
message DeletePolicyRequest {
    // @gotags: json:"id"
	string id = 1;
    // @gotags: json:"username"
    string username = 2;
    // @gotags: json:"role_id"
    string role_id = 3;
    // @gotags: json:"namespace"
    string namespace = 4;
    // @gotags: json:"type"
    optional bool read_only = 5;
    // @gotags: json:"domain"
    string domain = 6;  
}