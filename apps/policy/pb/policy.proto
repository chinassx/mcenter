syntax = "proto3";

package infraboard.mcenter.policy;
option go_package = "github.com/infraboard/mcenter/apps/policy";

import "apps/user/pb/user.proto";
import "apps/role/pb/role.proto";
import "github.com/infraboard/mcube/pb/page/page.proto";


// RPC 策略服务
service RPC {
	rpc CreatePolicy(CreatePolicyRequest) returns(Policy);
	rpc QueryPolicy(QueryPolicyRequest) returns(PolicySet);
	rpc DescribePolicy(DescribePolicyRequest) returns(Policy);
	rpc DeletePolicy(DeletePolicyRequest) returns(Policy);
}

enum PolicyType {
    // CustomPolicy (custom) 用户自己定义的策略
    CUSTOM = 0;
    // BuildInPolicy (build_in) 系统内部逻辑, 不允许用户看到并修改
    BUILD_IN = 1;
}

// Policy 权限策略
message Policy {
    // 策略ID
    // @gotags: bson:"_id" json:"id"
    string id = 1;
    // 创建时间
    // @gotags: bson:"create_at" json:"create_at"
    int64 create_at = 2;
    // 更新时间
    // @gotags: bson:"update_at" json:"update_at"
    int64 update_at = 3;
    // 策略所属域
    // @gotags: bson:"domain" json:"domain"
    string domain = 4;
    // 创建者ID
    // @gotags: bson:"creater" json:"creater"
    string creater = 5;
    // 用户类型
    // @gotags: bson:"user_type" json:"user_type"
    user.TYPE user_type = 6;
    // 范围
    // @gotags: bson:"namespace" json:"namespace"
    string namespace = 7;
    // 用户
    // @gotags: bson:"username" json:"username"
    string username = 8;
    // 角色名称
    // @gotags: bson:"role_id" json:"role_id"
    string role_id = 9;
    // 范围控制
    // @gotags: bson:"scope" json:"scope"
    string scope = 10;
    // 策略过期时间
    // @gotags: bson:"expired_time" json:"expired_time"
    int64 expired_time = 11;
    // 策略的类型
    // @gotags: bson:"type" json:"type"
    PolicyType type = 12;  
    // 关联的角色对象
    // @gotags: bson:"-" json:"role,omitempty"
    role.Role role = 13;
}

message PolicySet {
    // @gotags: bson:"total" json:"total"
    int64 total = 1;
    // @gotags: bson:"items" json:"items"
    repeated Policy items = 2;
}

// CreatePolicyRequest 创建策略的请求
message CreatePolicyRequest {
    // 范围
    // @gotags: bson:"namespace" json:"namespace" validate:"lte=120"
    string namespace = 1;
    // 用户
    // @gotags: bson:"username" json:"username" validate:"required,lte=120"
    string username = 2;
    // 角色名称
    // @gotags: bson:"role_id" json:"role_id" validate:"required,lte=40"
    string role_id = 3;
    // 范围控制
    // @gotags: bson:"scope" json:"scope"
    string scope = 4;
    // 策略过期时间
    // @gotags: bson:"expired_time" json:"expired_time"
    int64 expired_time = 5;
    // 策略的类型
    // @gotags: bson:"type" json:"type"
    PolicyType type = 6;  
    // 策略所属域
    // @gotags: bson:"domain" json:"domain"
    string domain = 7;
    // 创建者ID
    // @gotags: bson:"creater" json:"creater"
    string creater = 8;                                 
}

// QueryPolicyRequest 获取子账号列表
message QueryPolicyRequest {
    // @gotags: bson:"page" json:"page"
   infraboard.mcube.page.PageRequest page = 1;
    // @gotags: json:"username,omitempty"
    string username = 2;
    // @gotags: json:"role_id,omitempty"
    string role_id = 3;
    // @gotags: json:"namespace,omitempty"
    string namespace = 4;
    // @gotags: json:"type,omitempty"
    optional PolicyType type = 5;
    // @gotags: json:"with_role,omitempty"
    bool with_role = 6;
    // @gotags: json:"with_namespace,omitempty"
    bool with_namespace = 7;
    // @gotags: json:"domain"
    string domain = 8;    
}

// DescribePolicyRequest todo
message DescribePolicyRequest {
    // @gotags: json:"id"
	string id = 1;
}

// DeletePolicyRequest todo
message DeletePolicyRequest {
    // @gotags: json:"id"
	string id = 1;
    // @gotags: json:"username,omitempty"
    string username = 2;
    // @gotags: json:"role_id,omitempty"
    string role_id = 3;
    // @gotags: json:"namespace,omitempty"
    string namespace = 4;
    // @gotags: json:"type,omitempty"
    optional PolicyType type = 5;
    // @gotags: json:"domain"
    string domain = 6;  
}