syntax = "proto3";

package infraboard.mcenter.instance;
option go_package = "github.com/infraboard/mcenter/apps/instance";

service Service {
    // 实例注册
    rpc RegistryInstance(RegistryRequest) returns(Instance);
    // 实例上报心跳
    rpc Heartbeat(stream HeartbeatRequest) returns(stream HeartbeatResponse);
    // 实例注销
    rpc UnRegistry(UnregistryRequest) returns(UnregistryResponse);
    // 实例搜索, 用于客户端做服务发现
    rpc Search(SearchRequest) returns(InstanceSet);
}

// 服务实例信息, 比如 阿里云_杭州/生产环境/app01/default/instance01
message Instance {
    // 服务所属域
    // @gotags: bson:"_id" json:"id"
    string id = 1;
    // 服务所属域
    // @gotags: bson:"domain" json:"domain"
    string domain = 2;
    // 服务所属空间
    // @gotags: bson:"namespace" json:"namespace"
    string namespace = 3;
    // 实例所属应用Id
    // @gotags: bson:"application_name" json:"application_name"
    string application_name = 4;
    // 实例注册相关信息
    // @gotags: bson:"registry_info" json:"registry_info"
    RegistryRequest registry_info = 5;
    // 实例状态
    // @gotags: bson:"status" json:"status"
    Status status = 6;
    // 实例配置
    // @gotags: bson:"config" json:"config"
    Config config = 7;
}

message Config {
    // 心跳设置
    // @gotags: bson:"heart_beat" json:"heart_beat"
    HeartbeatConfig heartbeat = 1;
}

message HeartbeatConfig {
    // 心跳间隔
    // @gotags: bson:"interval" json:"interval"
    int32 interval = 1;
    // 心跳超时时间, 单位秒
    // @gotags: bson:"timeout" json:"timeout"
    int32 timeout = 2;
}

message InstanceSet {
    // 总个数
    // @gotags: bson:"status" json:"status"
    int64 total = 1;
    // 实例列表
    // @gotags: bson:"status" json:"status"
    repeated Instance items = 2;
}

message RegistryRequest {
    // 实例所属环境, 默认default
    // @gotags: bson:"region" json:"region" validate:"required"
    string region = 1;
    // 实例所属环境, 默认default
    // @gotags: bson:"environment" json:"environment" validate:"required"
    string environment = 2;
    // 实例所属分组,默认default
    // @gotags: bson:"group" json:"group" validate:"required"
    string group = 3;
    // 实例名称
    // @gotags: bson:"name" json:"name" validate:"required"
    string name = 4;
    // 实例地址
    // @gotags: bson:"address" json:"address" validate:"required"
    string address = 5;
    // 实例标签, 可以根据标签快速过滤实例
    // @gotags: bson:"tags" json:"tags"
    map<string,string> tags = 6;
    // 实例构建信息
    // @gotags: bson:"build" json:"build"
    Build build = 7;
}

// 实例构建相关信息
message Build {
    // 实例版本
    // @gotags: bson:"version" json:"version"
    string version = 1;
    // 实例代码构建对应分支
    // @gotags: bson:"git_branch" json:"git_branch"
    string git_branch = 2;
    // 实例代码对应commit号
    // @gotags: bson:"git_commit" json:"git_commit"
    string git_commit = 3;
    // 实例构建时间
    // @gotags: bson:"build_at" json:"build_at"
    int64 build_at = 4;
}

message Status {
    // 上线时间
    // @gotags: bson:"online" json:"online"
    int64 online = 5;
}

message HeartbeatRequest {
    // 实例Id列表, 允许多个实例
    // @gotags: bson:"instance_id" json:"instance_id"
    string instance_id = 1;
}

message HeartbeatResponse {
    // 客户端下一次心跳包的发送间隔, 单位秒
    // @gotags: bson:"next" json:"next"
    int32 next = 1;
}

message UnregistryRequest {

}

message UnregistryResponse {

}

message SearchRequest {
    // 服务所属域
    // @gotags: bson:"domain" json:"domain" validate:"required"
    string domain = 1;
    // 服务所属空间
    // @gotags: bson:"namespace" json:"namespace"
    string namespace = 2;
    // 实例所属应用Id
    // @gotags: bson:"application_name" json:"application_name"
    string application_name = 3;
    // 实例所属环境, 默认default
    // @gotags: bson:"region" json:"region"
    string region = 4;
    // 实例所属环境, 默认default
    // @gotags: bson:"environment" json:"environment"
    string environment = 5;
    // 实例所属分组,默认default
    // @gotags: bson:"group" json:"group"
    string group = 6;
}