// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: apps/domain/pb/domain.proto

package domain

import (
	ldap "github.com/infraboard/mcenter/apps/token/provider/ldap"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DomainSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 总数量
	// @gotags: bson:"total" json:"total"
	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total" bson:"total"`
	// 数据项
	// @gotags: bson:"items" json:"items"
	Items []*Domain `protobuf:"bytes,2,rep,name=items,proto3" json:"items" bson:"items"`
}

func (x *DomainSet) Reset() {
	*x = DomainSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_domain_pb_domain_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DomainSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DomainSet) ProtoMessage() {}

func (x *DomainSet) ProtoReflect() protoreflect.Message {
	mi := &file_apps_domain_pb_domain_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DomainSet.ProtoReflect.Descriptor instead.
func (*DomainSet) Descriptor() ([]byte, []int) {
	return file_apps_domain_pb_domain_proto_rawDescGZIP(), []int{0}
}

func (x *DomainSet) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DomainSet) GetItems() []*Domain {
	if x != nil {
		return x.Items
	}
	return nil
}

type Domain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 公司或者组织名称
	// @gotags: bson:"_id" json:"id"
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id" bson:"_id"`
	// 创建时间
	// @gotags: bson:"create_at" json:"create_at"
	CreateAt int64 `protobuf:"varint,2,opt,name=create_at,json=createAt,proto3" json:"create_at" bson:"create_at"`
	// 更新时间
	// @gotags: bson:"update_at" json:"update_at"
	UpdateAt int64 `protobuf:"varint,3,opt,name=update_at,json=updateAt,proto3" json:"update_at" bson:"update_at"`
	// 创建信息
	// @gotags: bson:"spec" json:"spec"
	Spec *CreateDomainRequest `protobuf:"bytes,4,opt,name=spec,proto3" json:"spec" bson:"spec"`
}

func (x *Domain) Reset() {
	*x = Domain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_domain_pb_domain_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Domain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Domain) ProtoMessage() {}

func (x *Domain) ProtoReflect() protoreflect.Message {
	mi := &file_apps_domain_pb_domain_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Domain.ProtoReflect.Descriptor instead.
func (*Domain) Descriptor() ([]byte, []int) {
	return file_apps_domain_pb_domain_proto_rawDescGZIP(), []int{1}
}

func (x *Domain) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Domain) GetCreateAt() int64 {
	if x != nil {
		return x.CreateAt
	}
	return 0
}

func (x *Domain) GetUpdateAt() int64 {
	if x != nil {
		return x.UpdateAt
	}
	return 0
}

func (x *Domain) GetSpec() *CreateDomainRequest {
	if x != nil {
		return x.Spec
	}
	return nil
}

type CreateDomainRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 域状态, 是否需要冻结该域, 冻结时, 该域下面所有用户禁止登录
	// @gotags: bson:"enabled" json:"enabled"
	Enabled bool `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled" bson:"enabled"`
	// 归属人
	// @gotags: bson:"owner" json:"owner"
	Owner string `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner" bson:"owner"`
	// 全称
	// @gotags: bson:"name" json:"name"  validate:"required"
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name" bson:"name" validate:"required"`
	// 公司LOGO图片的URL
	// @gotags: bson:"logo_path" json:"logo_path"
	LogoPath string `protobuf:"bytes,4,opt,name=logo_path,json=logoPath,proto3" json:"logo_path" bson:"logo_path"`
	// 描述
	// @gotags: bson:"description" json:"description"
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description" bson:"description"`
	// 电话
	// @gotags: bson:"phone" json:"phone"
	Phone string `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone" bson:"phone"`
	// 规模: 50人以下, 50~100, ...
	// @gotags: bson:"size" json:"size"
	Size string `protobuf:"bytes,7,opt,name=size,proto3" json:"size" bson:"size"`
	// 位置: 指城市, 比如 中国,四川,成都
	// @gotags: bson:"location" json:"location"
	Location string `protobuf:"bytes,8,opt,name=location,proto3" json:"location" bson:"location"`
	// 地址: 比如环球中心 10F 1034
	// @gotags: bson:"address" json:"address"
	Address string `protobuf:"bytes,9,opt,name=address,proto3" json:"address" bson:"address"`
	// 所属行业: 比如, 互联网
	// @gotags: bson:"industry" json:"industry"
	Industry string `protobuf:"bytes,10,opt,name=industry,proto3" json:"industry" bson:"industry"`
	// 传真
	// @gotags: bson:"fax" json:"fax"
	Fax string `protobuf:"bytes,11,opt,name=fax,proto3" json:"fax" bson:"fax"`
	// 联系人
	// @gotags: bson:"contack" json:"contack"
	Contack *Contact `protobuf:"bytes,12,opt,name=contack,proto3" json:"contack" bson:"contack"`
	// SecuritySetting 域安全设置
	// @gotags: bson:"security_setting" json:"security_setting"
	SecuritySetting *SecuritySetting `protobuf:"bytes,13,opt,name=security_setting,json=securitySetting,proto3" json:"security_setting" bson:"security_setting"`
	// LdapConfig 域关联的LDAP设置
	// @gotags: bson:"ldap_setting" json:"ldap_setting"
	LdapSetting *ldap.LdapConfig `protobuf:"bytes,14,opt,name=ldap_setting,json=ldapSetting,proto3" json:"ldap_setting" bson:"ldap_setting"`
}

func (x *CreateDomainRequest) Reset() {
	*x = CreateDomainRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_domain_pb_domain_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateDomainRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateDomainRequest) ProtoMessage() {}

func (x *CreateDomainRequest) ProtoReflect() protoreflect.Message {
	mi := &file_apps_domain_pb_domain_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateDomainRequest.ProtoReflect.Descriptor instead.
func (*CreateDomainRequest) Descriptor() ([]byte, []int) {
	return file_apps_domain_pb_domain_proto_rawDescGZIP(), []int{2}
}

func (x *CreateDomainRequest) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *CreateDomainRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *CreateDomainRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateDomainRequest) GetLogoPath() string {
	if x != nil {
		return x.LogoPath
	}
	return ""
}

func (x *CreateDomainRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateDomainRequest) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *CreateDomainRequest) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *CreateDomainRequest) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

func (x *CreateDomainRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *CreateDomainRequest) GetIndustry() string {
	if x != nil {
		return x.Industry
	}
	return ""
}

func (x *CreateDomainRequest) GetFax() string {
	if x != nil {
		return x.Fax
	}
	return ""
}

func (x *CreateDomainRequest) GetContack() *Contact {
	if x != nil {
		return x.Contack
	}
	return nil
}

func (x *CreateDomainRequest) GetSecuritySetting() *SecuritySetting {
	if x != nil {
		return x.SecuritySetting
	}
	return nil
}

func (x *CreateDomainRequest) GetLdapSetting() *ldap.LdapConfig {
	if x != nil {
		return x.LdapSetting
	}
	return nil
}

// 联系人
type Contact struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 姓名
	// @gotags: bson:"name" json:"name"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name" bson:"name"`
	// 职位
	// @gotags: bson:"title" json:"title"
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title" bson:"title"`
	// 电话
	// @gotags: bson:"phone" json:"phone"
	Phone string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone" bson:"phone"`
	// 邮箱
	// @gotags: bson:"email" json:"email"
	Email string `protobuf:"bytes,4,opt,name=email,proto3" json:"email" bson:"email"`
}

func (x *Contact) Reset() {
	*x = Contact{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_domain_pb_domain_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Contact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Contact) ProtoMessage() {}

func (x *Contact) ProtoReflect() protoreflect.Message {
	mi := &file_apps_domain_pb_domain_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Contact.ProtoReflect.Descriptor instead.
func (*Contact) Descriptor() ([]byte, []int) {
	return file_apps_domain_pb_domain_proto_rawDescGZIP(), []int{3}
}

func (x *Contact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Contact) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Contact) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *Contact) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

// SecuritySetting 安全策略
type SecuritySetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 密码安全
	// @gotags: bson:"password_security" json:"password_security"
	PasswordSecurity *PasswordSecurity `protobuf:"bytes,1,opt,name=password_security,json=passwordSecurity,proto3" json:"password_security" bson:"password_security"`
	// 登录安全
	// @gotags: bson:"login_security" json:"login_security"
	LoginSecurity *LoginSecurity `protobuf:"bytes,2,opt,name=login_security,json=loginSecurity,proto3" json:"login_security" bson:"login_security"`
}

func (x *SecuritySetting) Reset() {
	*x = SecuritySetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_domain_pb_domain_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecuritySetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecuritySetting) ProtoMessage() {}

func (x *SecuritySetting) ProtoReflect() protoreflect.Message {
	mi := &file_apps_domain_pb_domain_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecuritySetting.ProtoReflect.Descriptor instead.
func (*SecuritySetting) Descriptor() ([]byte, []int) {
	return file_apps_domain_pb_domain_proto_rawDescGZIP(), []int{4}
}

func (x *SecuritySetting) GetPasswordSecurity() *PasswordSecurity {
	if x != nil {
		return x.PasswordSecurity
	}
	return nil
}

func (x *SecuritySetting) GetLoginSecurity() *LoginSecurity {
	if x != nil {
		return x.LoginSecurity
	}
	return nil
}

// PasswordSecurity 密码安全设置
type PasswordSecurity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 密码长度
	// @gotags: bson:"length" json:"length" validate:"required,min=8,max=64"
	Length int32 `protobuf:"varint,1,opt,name=length,proto3" json:"length" bson:"length" validate:"required,min=8,max=64"`
	// 包含数字
	// @gotags: bson:"include_number" json:"include_number"
	IncludeNumber bool `protobuf:"varint,2,opt,name=include_number,json=includeNumber,proto3" json:"include_number" bson:"include_number"`
	// 包含小写字母
	// @gotags: bson:"include_lower_letter" json:"include_lower_letter"
	IncludeLowerLetter bool `protobuf:"varint,3,opt,name=include_lower_letter,json=includeLowerLetter,proto3" json:"include_lower_letter" bson:"include_lower_letter"`
	// 包含大写字母
	// @gotags: bson:"include_upper_letter" json:"include_upper_letter"
	IncludeUpperLetter bool `protobuf:"varint,4,opt,name=include_upper_letter,json=includeUpperLetter,proto3" json:"include_upper_letter" bson:"include_upper_letter"`
	// 包含特殊字符
	// @gotags: bson:"include_symbols" json:"include_symbols"
	IncludeSymbols bool `protobuf:"varint,5,opt,name=include_symbols,json=includeSymbols,proto3" json:"include_symbols" bson:"include_symbols"`
	// 重复限制
	// @gotags: bson:"repeate_limite" json:"repeate_limite" validate:"required,min=1,max=24"
	RepeateLimite uint32 `protobuf:"varint,6,opt,name=repeate_limite,json=repeateLimite,proto3" json:"repeate_limite" bson:"repeate_limite" validate:"required,min=1,max=24"`
	// 密码过期时间, 密码过期后要求用户重置密码
	// @gotags: bson:"password_expired_days" json:"password_expired_days" validate:"required,min=0,max=365"
	PasswordExpiredDays uint32 `protobuf:"varint,7,opt,name=password_expired_days,json=passwordExpiredDays,proto3" json:"password_expired_days" bson:"password_expired_days" validate:"required,min=0,max=365"`
	// 密码过期前多少天开始提醒
	// @gotags: bson:"before_expired_remind_days" json:"before_expired_remind_days" validate:"required,min=0,max=365"
	BeforeExpiredRemindDays uint32 `protobuf:"varint,8,opt,name=before_expired_remind_days,json=beforeExpiredRemindDays,proto3" json:"before_expired_remind_days" bson:"before_expired_remind_days" validate:"required,min=0,max=365"`
}

func (x *PasswordSecurity) Reset() {
	*x = PasswordSecurity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_domain_pb_domain_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PasswordSecurity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PasswordSecurity) ProtoMessage() {}

func (x *PasswordSecurity) ProtoReflect() protoreflect.Message {
	mi := &file_apps_domain_pb_domain_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PasswordSecurity.ProtoReflect.Descriptor instead.
func (*PasswordSecurity) Descriptor() ([]byte, []int) {
	return file_apps_domain_pb_domain_proto_rawDescGZIP(), []int{5}
}

func (x *PasswordSecurity) GetLength() int32 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *PasswordSecurity) GetIncludeNumber() bool {
	if x != nil {
		return x.IncludeNumber
	}
	return false
}

func (x *PasswordSecurity) GetIncludeLowerLetter() bool {
	if x != nil {
		return x.IncludeLowerLetter
	}
	return false
}

func (x *PasswordSecurity) GetIncludeUpperLetter() bool {
	if x != nil {
		return x.IncludeUpperLetter
	}
	return false
}

func (x *PasswordSecurity) GetIncludeSymbols() bool {
	if x != nil {
		return x.IncludeSymbols
	}
	return false
}

func (x *PasswordSecurity) GetRepeateLimite() uint32 {
	if x != nil {
		return x.RepeateLimite
	}
	return 0
}

func (x *PasswordSecurity) GetPasswordExpiredDays() uint32 {
	if x != nil {
		return x.PasswordExpiredDays
	}
	return 0
}

func (x *PasswordSecurity) GetBeforeExpiredRemindDays() uint32 {
	if x != nil {
		return x.BeforeExpiredRemindDays
	}
	return 0
}

// ExceptionLockConfig todo
type ExceptionLockConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 异地登录
	// @gotags: bson:"other_place_login" json:"other_place_login"
	OtherPlaceLogin bool `protobuf:"varint,1,opt,name=other_place_login,json=otherPlaceLogin,proto3" json:"other_place_login" bson:"other_place_login"`
	// 未登录天数
	// @gotags: bson:"not_login_days" json:"not_login_days"
	NotLoginDays uint32 `protobuf:"varint,2,opt,name=not_login_days,json=notLoginDays,proto3" json:"not_login_days" bson:"not_login_days"`
}

func (x *ExceptionLockConfig) Reset() {
	*x = ExceptionLockConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_domain_pb_domain_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExceptionLockConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExceptionLockConfig) ProtoMessage() {}

func (x *ExceptionLockConfig) ProtoReflect() protoreflect.Message {
	mi := &file_apps_domain_pb_domain_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExceptionLockConfig.ProtoReflect.Descriptor instead.
func (*ExceptionLockConfig) Descriptor() ([]byte, []int) {
	return file_apps_domain_pb_domain_proto_rawDescGZIP(), []int{6}
}

func (x *ExceptionLockConfig) GetOtherPlaceLogin() bool {
	if x != nil {
		return x.OtherPlaceLogin
	}
	return false
}

func (x *ExceptionLockConfig) GetNotLoginDays() uint32 {
	if x != nil {
		return x.NotLoginDays
	}
	return 0
}

// IPLimiteConfig todo
type IPLimiteConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 黑名单还是白名单
	// @gotags: bson:"type" json:"type"
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type" bson:"type"`
	// ip列表
	// @gotags: bson:"ip" json:"ip"
	Ip []string `protobuf:"bytes,2,rep,name=ip,proto3" json:"ip" bson:"ip"`
}

func (x *IPLimiteConfig) Reset() {
	*x = IPLimiteConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_domain_pb_domain_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IPLimiteConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IPLimiteConfig) ProtoMessage() {}

func (x *IPLimiteConfig) ProtoReflect() protoreflect.Message {
	mi := &file_apps_domain_pb_domain_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IPLimiteConfig.ProtoReflect.Descriptor instead.
func (*IPLimiteConfig) Descriptor() ([]byte, []int) {
	return file_apps_domain_pb_domain_proto_rawDescGZIP(), []int{7}
}

func (x *IPLimiteConfig) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *IPLimiteConfig) GetIp() []string {
	if x != nil {
		return x.Ip
	}
	return nil
}

// RetryLockConfig 重试锁配置
type RetryLockConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 重试限制
	// @gotags: bson:"retry_limite" json:"retry_limite"
	RetryLimite uint32 `protobuf:"varint,1,opt,name=retry_limite,json=retryLimite,proto3" json:"retry_limite" bson:"retry_limite"`
	// 锁定时长
	// @gotags: bson:"locked_minite" json:"locked_minite"
	LockedMinite uint32 `protobuf:"varint,2,opt,name=locked_minite,json=lockedMinite,proto3" json:"locked_minite" bson:"locked_minite"`
}

func (x *RetryLockConfig) Reset() {
	*x = RetryLockConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_domain_pb_domain_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetryLockConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryLockConfig) ProtoMessage() {}

func (x *RetryLockConfig) ProtoReflect() protoreflect.Message {
	mi := &file_apps_domain_pb_domain_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryLockConfig.ProtoReflect.Descriptor instead.
func (*RetryLockConfig) Descriptor() ([]byte, []int) {
	return file_apps_domain_pb_domain_proto_rawDescGZIP(), []int{8}
}

func (x *RetryLockConfig) GetRetryLimite() uint32 {
	if x != nil {
		return x.RetryLimite
	}
	return 0
}

func (x *RetryLockConfig) GetLockedMinite() uint32 {
	if x != nil {
		return x.LockedMinite
	}
	return 0
}

// LoginSecurity 登录安全
type LoginSecurity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 异常登录锁
	// @gotags: bson:"exception_lock" json:"exception_lock"
	ExceptionLock bool `protobuf:"varint,1,opt,name=exception_lock,json=exceptionLock,proto3" json:"exception_lock" bson:"exception_lock"`
	// 异常配置
	// @gotags: bson:"exception_lock_config" json:"exception_lock_config"
	ExceptionLockConfig *ExceptionLockConfig `protobuf:"bytes,2,opt,name=exception_lock_config,json=exceptionLockConfig,proto3" json:"exception_lock_config" bson:"exception_lock_config"`
	// 重试锁
	// @gotags: bson:"retry_lock" json:"retry_lock"
	RetryLock bool `protobuf:"varint,3,opt,name=retry_lock,json=retryLock,proto3" json:"retry_lock" bson:"retry_lock"`
	// 重试锁配置
	// @gotags: bson:"retry_lock_config" json:"retry_lock_config"
	RetryLockConfig *RetryLockConfig `protobuf:"bytes,4,opt,name=retry_lock_config,json=retryLockConfig,proto3" json:"retry_lock_config" bson:"retry_lock_config"`
	// IP限制
	// @gotags: bson:"ip_limite" json:"ip_limite"
	IpLimite bool `protobuf:"varint,5,opt,name=ip_limite,json=ipLimite,proto3" json:"ip_limite" bson:"ip_limite"`
	// IP限制配置
	// @gotags: bson:"ip_limite_config" json:"ip_limite_config"
	IpLimiteConfig *IPLimiteConfig `protobuf:"bytes,6,opt,name=ip_limite_config,json=ipLimiteConfig,proto3" json:"ip_limite_config" bson:"ip_limite_config"`
}

func (x *LoginSecurity) Reset() {
	*x = LoginSecurity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_domain_pb_domain_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginSecurity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginSecurity) ProtoMessage() {}

func (x *LoginSecurity) ProtoReflect() protoreflect.Message {
	mi := &file_apps_domain_pb_domain_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginSecurity.ProtoReflect.Descriptor instead.
func (*LoginSecurity) Descriptor() ([]byte, []int) {
	return file_apps_domain_pb_domain_proto_rawDescGZIP(), []int{9}
}

func (x *LoginSecurity) GetExceptionLock() bool {
	if x != nil {
		return x.ExceptionLock
	}
	return false
}

func (x *LoginSecurity) GetExceptionLockConfig() *ExceptionLockConfig {
	if x != nil {
		return x.ExceptionLockConfig
	}
	return nil
}

func (x *LoginSecurity) GetRetryLock() bool {
	if x != nil {
		return x.RetryLock
	}
	return false
}

func (x *LoginSecurity) GetRetryLockConfig() *RetryLockConfig {
	if x != nil {
		return x.RetryLockConfig
	}
	return nil
}

func (x *LoginSecurity) GetIpLimite() bool {
	if x != nil {
		return x.IpLimite
	}
	return false
}

func (x *LoginSecurity) GetIpLimiteConfig() *IPLimiteConfig {
	if x != nil {
		return x.IpLimiteConfig
	}
	return nil
}

var File_apps_domain_pb_domain_proto protoreflect.FileDescriptor

var file_apps_domain_pb_domain_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x70, 0x62,
	0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x1a, 0x18, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x2f, 0x70, 0x62, 0x2f, 0x6c, 0x64, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x5a, 0x0a, 0x09, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x2e, 0x6d, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x96,
	0x01, 0x0a, 0x06, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x74, 0x12, 0x42, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2e, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x84, 0x04, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x66, 0x61, 0x78, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x66, 0x61, 0x78,
	0x12, 0x3c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d,
	0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x55,
	0x0a, 0x10, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x47, 0x0a, 0x0c, 0x6c, 0x64, 0x61, 0x70, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x6e,
	0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x2e, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2e, 0x4c, 0x64, 0x61, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x0b, 0x6c, 0x64, 0x61, 0x70, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x5f,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22,
	0xbc, 0x01, 0x0a, 0x0f, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x53, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x58, 0x0a, 0x11, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x5f,
	0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x63, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x10, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x4f, 0x0a,
	0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x2e, 0x6d, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x22, 0xf6,
	0x02, 0x0a, 0x10, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x6c, 0x6f,
	0x77, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x4c, 0x65,
	0x74, 0x74, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f,
	0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x12, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x55, 0x70, 0x70, 0x65, 0x72,
	0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
	0x65, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x13, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x45,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x44, 0x61, 0x79, 0x73, 0x12, 0x3b, 0x0a, 0x1a, 0x62, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x17,
	0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x52, 0x65, 0x6d,
	0x69, 0x6e, 0x64, 0x44, 0x61, 0x79, 0x73, 0x22, 0x67, 0x0a, 0x13, 0x45, 0x78, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2a,
	0x0a, 0x11, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6c, 0x6f,
	0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x50, 0x6c, 0x61, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x6f,
	0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x6e, 0x6f, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x79, 0x73,
	0x22, 0x34, 0x0a, 0x0e, 0x49, 0x50, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0x59, 0x0a, 0x0f, 0x52, 0x65, 0x74, 0x72, 0x79, 0x4c,
	0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x74,
	0x72, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x72, 0x65, 0x74, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x69, 0x74,
	0x65, 0x22, 0x83, 0x03, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x75, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x78, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x62, 0x0a, 0x15, 0x65, 0x78,
	0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x69, 0x6e, 0x66, 0x72,
	0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x13, 0x65, 0x78, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x74, 0x72, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x12, 0x56, 0x0a,
	0x11, 0x72, 0x65, 0x74, 0x72, 0x79, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x6e, 0x66, 0x72, 0x61,
	0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x0f, 0x72, 0x65, 0x74, 0x72, 0x79, 0x4c, 0x6f, 0x63, 0x6b, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x70, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x70, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x65, 0x12, 0x53, 0x0a, 0x10, 0x69, 0x70, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69,
	0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x49, 0x50, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x69, 0x70, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x2f, 0x6d, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x64, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apps_domain_pb_domain_proto_rawDescOnce sync.Once
	file_apps_domain_pb_domain_proto_rawDescData = file_apps_domain_pb_domain_proto_rawDesc
)

func file_apps_domain_pb_domain_proto_rawDescGZIP() []byte {
	file_apps_domain_pb_domain_proto_rawDescOnce.Do(func() {
		file_apps_domain_pb_domain_proto_rawDescData = protoimpl.X.CompressGZIP(file_apps_domain_pb_domain_proto_rawDescData)
	})
	return file_apps_domain_pb_domain_proto_rawDescData
}

var file_apps_domain_pb_domain_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_apps_domain_pb_domain_proto_goTypes = []interface{}{
	(*DomainSet)(nil),           // 0: infraboard.mcenter.domain.DomainSet
	(*Domain)(nil),              // 1: infraboard.mcenter.domain.Domain
	(*CreateDomainRequest)(nil), // 2: infraboard.mcenter.domain.CreateDomainRequest
	(*Contact)(nil),             // 3: infraboard.mcenter.domain.Contact
	(*SecuritySetting)(nil),     // 4: infraboard.mcenter.domain.SecuritySetting
	(*PasswordSecurity)(nil),    // 5: infraboard.mcenter.domain.PasswordSecurity
	(*ExceptionLockConfig)(nil), // 6: infraboard.mcenter.domain.ExceptionLockConfig
	(*IPLimiteConfig)(nil),      // 7: infraboard.mcenter.domain.IPLimiteConfig
	(*RetryLockConfig)(nil),     // 8: infraboard.mcenter.domain.RetryLockConfig
	(*LoginSecurity)(nil),       // 9: infraboard.mcenter.domain.LoginSecurity
	(*ldap.LdapConfig)(nil),     // 10: infraboard.mcenter.token.LdapConfig
}
var file_apps_domain_pb_domain_proto_depIdxs = []int32{
	1,  // 0: infraboard.mcenter.domain.DomainSet.items:type_name -> infraboard.mcenter.domain.Domain
	2,  // 1: infraboard.mcenter.domain.Domain.spec:type_name -> infraboard.mcenter.domain.CreateDomainRequest
	3,  // 2: infraboard.mcenter.domain.CreateDomainRequest.contack:type_name -> infraboard.mcenter.domain.Contact
	4,  // 3: infraboard.mcenter.domain.CreateDomainRequest.security_setting:type_name -> infraboard.mcenter.domain.SecuritySetting
	10, // 4: infraboard.mcenter.domain.CreateDomainRequest.ldap_setting:type_name -> infraboard.mcenter.token.LdapConfig
	5,  // 5: infraboard.mcenter.domain.SecuritySetting.password_security:type_name -> infraboard.mcenter.domain.PasswordSecurity
	9,  // 6: infraboard.mcenter.domain.SecuritySetting.login_security:type_name -> infraboard.mcenter.domain.LoginSecurity
	6,  // 7: infraboard.mcenter.domain.LoginSecurity.exception_lock_config:type_name -> infraboard.mcenter.domain.ExceptionLockConfig
	8,  // 8: infraboard.mcenter.domain.LoginSecurity.retry_lock_config:type_name -> infraboard.mcenter.domain.RetryLockConfig
	7,  // 9: infraboard.mcenter.domain.LoginSecurity.ip_limite_config:type_name -> infraboard.mcenter.domain.IPLimiteConfig
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_apps_domain_pb_domain_proto_init() }
func file_apps_domain_pb_domain_proto_init() {
	if File_apps_domain_pb_domain_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apps_domain_pb_domain_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DomainSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_domain_pb_domain_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Domain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_domain_pb_domain_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateDomainRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_domain_pb_domain_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Contact); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_domain_pb_domain_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SecuritySetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_domain_pb_domain_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PasswordSecurity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_domain_pb_domain_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExceptionLockConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_domain_pb_domain_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IPLimiteConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_domain_pb_domain_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetryLockConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_apps_domain_pb_domain_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginSecurity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apps_domain_pb_domain_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_apps_domain_pb_domain_proto_goTypes,
		DependencyIndexes: file_apps_domain_pb_domain_proto_depIdxs,
		MessageInfos:      file_apps_domain_pb_domain_proto_msgTypes,
	}.Build()
	File_apps_domain_pb_domain_proto = out.File
	file_apps_domain_pb_domain_proto_rawDesc = nil
	file_apps_domain_pb_domain_proto_goTypes = nil
	file_apps_domain_pb_domain_proto_depIdxs = nil
}
