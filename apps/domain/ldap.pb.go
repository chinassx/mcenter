// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.6
// source: apps/domain/pb/ldap.proto

package domain

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LdapConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// LDAP Server URL
	// @gotags: bson:"url" json:"url"
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url" bson:"url"`
	// TLS是是否校验证书有效性
	// @gotags: bson:"skip_verify" json:"skip_verify"
	SkipVerify bool `protobuf:"varint,2,opt,name=skip_verify,json=skipVerify,proto3" json:"skip_verify" bson:"skip_verify"`
	// TLS是是否校验证书有效性
	// @gotags: bson:"base_dn" json:"base_dn"
	BaseDn string `protobuf:"bytes,3,opt,name=base_dn,json=baseDn,proto3" json:"base_dn" bson:"base_dn"`
	// 校验用户的DN
	// @gotags: bson:"additional_users_dn" json:"additional_users_dn"
	AdditionalUsersDn string `protobuf:"bytes,4,opt,name=additional_users_dn,json=additionalUsersDn,proto3" json:"additional_users_dn" bson:"additional_users_dn"`
	// 用户过滤条件
	// @gotags: bson:"users_filter" json:"users_filter"
	UsersFilter string `protobuf:"bytes,5,opt,name=users_filter,json=usersFilter,proto3" json:"users_filter" bson:"users_filter"`
	// 校验用户的Group DN
	// @gotags: bson:"additional_groups_dn" json:"additional_groups_dn"
	AdditionalGroupsDn string `protobuf:"bytes,6,opt,name=additional_groups_dn,json=additionalGroupsDn,proto3" json:"additional_groups_dn" bson:"additional_groups_dn"`
	// 用户组过滤条件
	// @gotags: bson:"groups_filter" json:"groups_filter"
	GroupsFilter string `protobuf:"bytes,7,opt,name=groups_filter,json=groupsFilter,proto3" json:"groups_filter" bson:"groups_filter"`
	// 组属性的名称
	// @gotags: bson:"groupname_attribute" json:"groupname_attribute"
	GroupnameAttribute string `protobuf:"bytes,8,opt,name=groupname_attribute,json=groupnameAttribute,proto3" json:"groupname_attribute" bson:"groupname_attribute"`
	// 用户属性的名称
	// @gotags: bson:"username_attribute" json:"username_attribute"
	UsernameAttribute string `protobuf:"bytes,9,opt,name=username_attribute,json=usernameAttribute,proto3" json:"username_attribute" bson:"username_attribute"`
	// 用户邮箱属性的名称
	// @gotags: bson:"mail_attribute" json:"mail_attribute"
	MailAttribute string `protobuf:"bytes,10,opt,name=mail_attribute,json=mailAttribute,proto3" json:"mail_attribute" bson:"mail_attribute"`
	// 用户显示名称属性名称
	// @gotags: bson:"display_name_attribute" json:"display_name_attribute"
	DisplayNameAttribute string `protobuf:"bytes,11,opt,name=display_name_attribute,json=displayNameAttribute,proto3" json:"display_name_attribute" bson:"display_name_attribute"`
	// 管理账号的用户名称
	// @gotags: bson:"admin_username" json:"admin_username"
	AdminUsername string `protobuf:"bytes,12,opt,name=admin_username,json=adminUsername,proto3" json:"admin_username" bson:"admin_username"`
	// 管理账号的用户密码
	// @gotags: bson:"admin_password" json:"admin_password"
	AdminPassword string `protobuf:"bytes,13,opt,name=admin_password,json=adminPassword,proto3" json:"admin_password" bson:"admin_password"`
}

func (x *LdapConfig) Reset() {
	*x = LdapConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_apps_domain_pb_ldap_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LdapConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LdapConfig) ProtoMessage() {}

func (x *LdapConfig) ProtoReflect() protoreflect.Message {
	mi := &file_apps_domain_pb_ldap_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LdapConfig.ProtoReflect.Descriptor instead.
func (*LdapConfig) Descriptor() ([]byte, []int) {
	return file_apps_domain_pb_ldap_proto_rawDescGZIP(), []int{0}
}

func (x *LdapConfig) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *LdapConfig) GetSkipVerify() bool {
	if x != nil {
		return x.SkipVerify
	}
	return false
}

func (x *LdapConfig) GetBaseDn() string {
	if x != nil {
		return x.BaseDn
	}
	return ""
}

func (x *LdapConfig) GetAdditionalUsersDn() string {
	if x != nil {
		return x.AdditionalUsersDn
	}
	return ""
}

func (x *LdapConfig) GetUsersFilter() string {
	if x != nil {
		return x.UsersFilter
	}
	return ""
}

func (x *LdapConfig) GetAdditionalGroupsDn() string {
	if x != nil {
		return x.AdditionalGroupsDn
	}
	return ""
}

func (x *LdapConfig) GetGroupsFilter() string {
	if x != nil {
		return x.GroupsFilter
	}
	return ""
}

func (x *LdapConfig) GetGroupnameAttribute() string {
	if x != nil {
		return x.GroupnameAttribute
	}
	return ""
}

func (x *LdapConfig) GetUsernameAttribute() string {
	if x != nil {
		return x.UsernameAttribute
	}
	return ""
}

func (x *LdapConfig) GetMailAttribute() string {
	if x != nil {
		return x.MailAttribute
	}
	return ""
}

func (x *LdapConfig) GetDisplayNameAttribute() string {
	if x != nil {
		return x.DisplayNameAttribute
	}
	return ""
}

func (x *LdapConfig) GetAdminUsername() string {
	if x != nil {
		return x.AdminUsername
	}
	return ""
}

func (x *LdapConfig) GetAdminPassword() string {
	if x != nil {
		return x.AdminPassword
	}
	return ""
}

var File_apps_domain_pb_ldap_proto protoreflect.FileDescriptor

var file_apps_domain_pb_ldap_proto_rawDesc = []byte{
	0x0a, 0x19, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2f, 0x70, 0x62,
	0x2f, 0x6c, 0x64, 0x61, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x19, 0x69, 0x6e, 0x66,
	0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2e, 0x6d, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2e,
	0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x22, 0x8d, 0x04, 0x0a, 0x0a, 0x4c, 0x64, 0x61, 0x70, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6b, 0x69, 0x70, 0x5f,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x6b,
	0x69, 0x70, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x64, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x61, 0x73, 0x65, 0x44,
	0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x64, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x73, 0x44,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x73, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x73, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x5f, 0x64, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x44, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x13, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x6e,
	0x61, 0x6d, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x12,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d,
	0x61, 0x69, 0x6c, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x69, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x66, 0x72, 0x61, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x2f,
	0x6d, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_apps_domain_pb_ldap_proto_rawDescOnce sync.Once
	file_apps_domain_pb_ldap_proto_rawDescData = file_apps_domain_pb_ldap_proto_rawDesc
)

func file_apps_domain_pb_ldap_proto_rawDescGZIP() []byte {
	file_apps_domain_pb_ldap_proto_rawDescOnce.Do(func() {
		file_apps_domain_pb_ldap_proto_rawDescData = protoimpl.X.CompressGZIP(file_apps_domain_pb_ldap_proto_rawDescData)
	})
	return file_apps_domain_pb_ldap_proto_rawDescData
}

var file_apps_domain_pb_ldap_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_apps_domain_pb_ldap_proto_goTypes = []interface{}{
	(*LdapConfig)(nil), // 0: infraboard.mcenter.domain.LdapConfig
}
var file_apps_domain_pb_ldap_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_apps_domain_pb_ldap_proto_init() }
func file_apps_domain_pb_ldap_proto_init() {
	if File_apps_domain_pb_ldap_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_apps_domain_pb_ldap_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LdapConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_apps_domain_pb_ldap_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_apps_domain_pb_ldap_proto_goTypes,
		DependencyIndexes: file_apps_domain_pb_ldap_proto_depIdxs,
		MessageInfos:      file_apps_domain_pb_ldap_proto_msgTypes,
	}.Build()
	File_apps_domain_pb_ldap_proto = out.File
	file_apps_domain_pb_ldap_proto_rawDesc = nil
	file_apps_domain_pb_ldap_proto_goTypes = nil
	file_apps_domain_pb_ldap_proto_depIdxs = nil
}
